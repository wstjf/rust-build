name: Build and Release

on:
  workflow_dispatch:
    inputs:
      package_url:
        description: 'Package download URL'
        required: true
        type: string
      package_password:
        description: 'Package password (optional)'
        required: false
        type: string
      package_name:
        description: 'Package name (optional, override auto-detection)'
        required: false
        type: string
      build_android:
        description: 'Build for Android'
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build rust
    
    steps:
      - name: Hide the inputs values to keep them private in the logs when running this workflow
        uses: levibostian/action-hide-sensitive-inputs@v1

      - name: Install toolchain
        run: |
          rustup default stable
          rustup update stable
          if [ "${{ inputs.build_android }}" = "true" ]; then
            cargo install cargo-ndk
            rustup target add aarch64-linux-android
          fi

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ""
          cache-targets: false
          
      - name: Download package
        run: |
          wget -O source.zip "${{ inputs.package_url }}"
          
      - name: Extract package
        run: |
          if [ -n "${{ inputs.package_password }}" ]; then
            unzip -P "${{ inputs.package_password }}" source.zip
          else
            unzip source.zip
          fi
          
      - name: Get package name
        id: get_name
        run: |
          if [ -n "${{ inputs.package_name }}" ]; then
            PACKAGE_NAME="${{ inputs.package_name }}"
          else
            PACKAGE_NAME=$(grep -m1 "name" Cargo.toml | cut -d '"' -f2)
          fi
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo $PACKAGE_NAME
          
      - name: Build release
        run: |
          if [ "${{ inputs.build_android }}" = "true" ]; then
            cargo ndk -t arm64-v8a build --release
            ls target/aarch64-linux-android/release/
          else
            cargo build --release
            ls target/release/
          fi
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ inputs.build_android && 'target/aarch64-linux-android/release/' || 'target/release/' }}${{ env.PACKAGE_NAME }}
